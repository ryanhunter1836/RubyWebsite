{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\ndocument.addEventListener(\"turbolinks:load\", function () {\n  var stripe;\n\n  var stripeElements = function stripeElements(publicKey) {\n    stripe = Stripe(publicKey);\n    var elements = stripe.elements(); // Element styles\n\n    var style = {\n      base: {\n        fontSize: '16px',\n        color: '#32325d',\n        fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',\n        fontSmoothing: 'antialiased',\n        '::placeholder': {\n          color: 'rgba(0,0,0,0.4)'\n        }\n      }\n    };\n    var card = elements.create('card', {\n      style: style\n    });\n    card.mount('#card-element'); // Element focus ring\n\n    card.on('focus', function () {\n      var el = document.getElementById('card-element');\n      el.classList.add('focused');\n    });\n    card.on('blur', function () {\n      var el = document.getElementById('card-element');\n      el.classList.remove('focused');\n    });\n    document.querySelector('#submit').addEventListener('click', function (evt) {\n      evt.preventDefault();\n      changeLoadingState(true); // Initiate payment\n\n      createPaymentMethodAndCustomer(stripe, card);\n    });\n  };\n\n  function showCardError(error) {\n    changeLoadingState(false); // The card was declined (i.e. insufficient funds, card has expired, etc)\n\n    var errorMsg = document.querySelector('.sr-field-error');\n    errorMsg.textContent = error.message;\n    setTimeout(function () {\n      errorMsg.textContent = '';\n    }, 8000);\n  }\n\n  var createPaymentMethodAndCustomer = function createPaymentMethodAndCustomer(stripe, card) {\n    var cardholderEmail = document.querySelector('#email').value;\n    stripe.createPaymentMethod('card', card, {\n      billing_details: {\n        email: cardholderEmail\n      }\n    }).then(function (result) {\n      if (result.error) {\n        showCardError(result.error);\n      } else {\n        createCustomer(result.paymentMethod.id, cardholderEmail);\n      }\n    });\n  };\n\n  function createCustomer(_x, _x2) {\n    return _createCustomer.apply(this, arguments);\n  }\n\n  function _createCustomer() {\n    _createCustomer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(paymentMethod, cardholderEmail) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch('/create-customer', {\n                method: 'post',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: cardholderEmail,\n                  payment_method: paymentMethod\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (subscription) {\n                handleSubscription(subscription);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _createCustomer.apply(this, arguments);\n  }\n\n  function handleSubscription(subscription) {\n    var latest_invoice = subscription.latest_invoice;\n    var payment_intent = latest_invoice.payment_intent;\n\n    if (payment_intent) {\n      var client_secret = payment_intent.client_secret,\n          status = payment_intent.status;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function (result) {\n          if (result.error) {\n            // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n            changeLoadingState(false);\n            showCardError(result.error);\n          } else {\n            // Show a success message to your customer\n            confirmSubscription(subscription.id);\n          }\n        });\n      } else {\n        // No additional information was needed\n        // Show a success message to your customer\n        orderComplete(subscription);\n      }\n    } else {\n      orderComplete(subscription);\n    }\n  }\n\n  function confirmSubscription(subscriptionId) {\n    return fetch('/subscription', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        subscriptionId: subscriptionId\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (subscription) {\n      orderComplete(subscription);\n    });\n  }\n\n  function getPublicKey() {\n    return fetch('/public-key', {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      stripeElements(response.publicKey);\n    });\n  }\n\n  getPublicKey();\n  /* ------- Post-payment helpers ------- */\n\n  /* Shows a success / error message when the payment is complete */\n\n  var orderComplete = function orderComplete(subscription) {\n    changeLoadingState(false);\n    var subscriptionJson = JSON.stringify(subscription, null, 2);\n    document.querySelectorAll('.payment-view').forEach(function (view) {\n      view.classList.add('hidden');\n    });\n    document.querySelectorAll('.completed-view').forEach(function (view) {\n      view.classList.remove('hidden');\n    });\n    document.querySelector('.order-status').textContent = subscription.status;\n    document.querySelector('code').textContent = subscriptionJson;\n  }; // Show a spinner on subscription submission\n\n\n  var changeLoadingState = function changeLoadingState(isLoading) {\n    if (isLoading) {\n      document.querySelector('#spinner').classList.add('loading');\n      document.querySelector('button').disabled = true;\n      document.querySelector('#button-text').classList.add('hidden');\n    } else {\n      document.querySelector('button').disabled = false;\n      document.querySelector('#spinner').classList.remove('loading');\n      document.querySelector('#button-text').classList.remove('hidden');\n    }\n  };\n});","map":{"version":3,"sources":["/home/ryan/Ruby/RubyWebsite/app/javascript/packs/stripe.js"],"names":["document","addEventListener","stripe","stripeElements","publicKey","Stripe","elements","style","base","fontSize","color","fontFamily","fontSmoothing","card","create","mount","on","el","getElementById","classList","add","remove","querySelector","evt","preventDefault","changeLoadingState","createPaymentMethodAndCustomer","showCardError","error","errorMsg","textContent","message","setTimeout","cardholderEmail","value","createPaymentMethod","billing_details","email","then","result","createCustomer","paymentMethod","id","fetch","method","headers","body","JSON","stringify","payment_method","response","json","subscription","handleSubscription","latest_invoice","payment_intent","client_secret","status","confirmCardPayment","confirmSubscription","orderComplete","subscriptionId","getPublicKey","subscriptionJson","querySelectorAll","forEach","view","isLoading","disabled"],"mappings":"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","sourcesContent":["document.addEventListener(\"turbolinks:load\", function() {\n    var stripe;\n\nvar stripeElements = function(publicKey) {\n  stripe = Stripe(publicKey);\n  var elements = stripe.elements();\n\n  // Element styles\n  var style = {\n    base: {\n      fontSize: '16px',\n      color: '#32325d',\n      fontFamily:\n        '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',\n      fontSmoothing: 'antialiased',\n      '::placeholder': {\n        color: 'rgba(0,0,0,0.4)'\n      }\n    }\n  };\n\n  var card = elements.create('card', { style: style });\n\n  card.mount('#card-element');\n\n  // Element focus ring\n  card.on('focus', function() {\n    var el = document.getElementById('card-element');\n    el.classList.add('focused');\n  });\n\n  card.on('blur', function() {\n    var el = document.getElementById('card-element');\n    el.classList.remove('focused');\n  });\n\n  document.querySelector('#submit').addEventListener('click', function(evt) {\n    evt.preventDefault();\n    changeLoadingState(true);\n    // Initiate payment\n    createPaymentMethodAndCustomer(stripe, card);\n  });\n};\n\nfunction showCardError(error) {\n  changeLoadingState(false);\n  // The card was declined (i.e. insufficient funds, card has expired, etc)\n  var errorMsg = document.querySelector('.sr-field-error');\n  errorMsg.textContent = error.message;\n  setTimeout(function() {\n    errorMsg.textContent = '';\n  }, 8000);\n}\n\nvar createPaymentMethodAndCustomer = function(stripe, card) {\n  var cardholderEmail = document.querySelector('#email').value;\n  stripe\n    .createPaymentMethod('card', card, {\n      billing_details: {\n        email: cardholderEmail\n      }\n    })\n    .then(function(result) {\n      if (result.error) {\n        showCardError(result.error);\n      } else {\n        createCustomer(result.paymentMethod.id, cardholderEmail);\n      }\n    });\n};\n\nasync function createCustomer(paymentMethod, cardholderEmail) {\n  return fetch('/create-customer', {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: cardholderEmail,\n      payment_method: paymentMethod\n    })\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(subscription => {\n      handleSubscription(subscription);\n    });\n}\n\nfunction handleSubscription(subscription) {\n  const { latest_invoice } = subscription;\n  const { payment_intent } = latest_invoice;\n\n  if (payment_intent) {\n    const { client_secret, status } = payment_intent;\n\n    if (status === 'requires_action') {\n      stripe.confirmCardPayment(client_secret).then(function(result) {\n        if (result.error) {\n          // Display error message in your UI.\n          // The card was declined (i.e. insufficient funds, card has expired, etc)\n          changeLoadingState(false);\n          showCardError(result.error);\n        } else {\n          // Show a success message to your customer\n          confirmSubscription(subscription.id);\n        }\n      });\n    } else {\n      // No additional information was needed\n      // Show a success message to your customer\n      orderComplete(subscription);\n    }\n  } else {\n    orderComplete(subscription);\n  }\n}\n\nfunction confirmSubscription(subscriptionId) {\n  return fetch('/subscription', {\n    method: 'post',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      subscriptionId: subscriptionId\n    })\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(subscription) {\n      orderComplete(subscription);\n    });\n}\n\nfunction getPublicKey() {\n  return fetch('/public-key', {\n    method: 'get',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(response) {\n      stripeElements(response.publicKey);\n    });\n}\n\ngetPublicKey();\n\n/* ------- Post-payment helpers ------- */\n\n/* Shows a success / error message when the payment is complete */\nvar orderComplete = function(subscription) {\n  changeLoadingState(false);\n  var subscriptionJson = JSON.stringify(subscription, null, 2);\n  document.querySelectorAll('.payment-view').forEach(function(view) {\n    view.classList.add('hidden');\n  });\n  document.querySelectorAll('.completed-view').forEach(function(view) {\n    view.classList.remove('hidden');\n  });\n  document.querySelector('.order-status').textContent = subscription.status;\n  document.querySelector('code').textContent = subscriptionJson;\n};\n\n// Show a spinner on subscription submission\nvar changeLoadingState = function(isLoading) {\n  if (isLoading) {\n    document.querySelector('#spinner').classList.add('loading');\n    document.querySelector('button').disabled = true;\n\n    document.querySelector('#button-text').classList.add('hidden');\n  } else {\n    document.querySelector('button').disabled = false;\n    document.querySelector('#spinner').classList.remove('loading');\n    document.querySelector('#button-text').classList.remove('hidden');\n  }\n};\n});"]},"metadata":{},"sourceType":"module"}