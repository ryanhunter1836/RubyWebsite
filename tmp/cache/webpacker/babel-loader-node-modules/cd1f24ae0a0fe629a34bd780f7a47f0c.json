{"ast":null,"code":"document.addEventListener(\"turbolinks:load\", function () {\n  // Create a Checkout Session with the selected plan ID\n  var createCheckoutSession = function createCheckoutSession(priceId) {\n    return fetch(\"/create-checkout-session\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')\n      },\n      body: JSON.stringify({\n        priceId: priceId\n      })\n    }).then(function (result) {\n      return result.json();\n    });\n  }; // Handle any errors returned from Checkout\n\n\n  var handleResult = function handleResult(result) {\n    if (result.error) {\n      var displayError = document.getElementById(\"error-message\");\n      displayError.textContent = result.error.message;\n    }\n  };\n  /* Get your Stripe publishable key to initialize Stripe.js */\n\n\n  fetch(\"/setup\").then(function (result) {\n    return result.json();\n  }).then(function (json) {\n    var publishableKey = json.publishableKey;\n    var basicPriceId = json.basicPrice;\n    var proPriceId = json.proPrice;\n    var stripe = Stripe(publishableKey); // Setup event handler to create a Checkout Session when button is clicked\n\n    document.getElementById(\"basic-plan-btn\").addEventListener(\"click\", function (evt) {\n      createCheckoutSession(basicPriceId).then(function (data) {\n        // Call Stripe.js method to redirect to the new Checkout page\n        stripe.redirectToCheckout({\n          sessionId: data.sessionId\n        }).then(handleResult);\n      });\n    });\n  });\n});","map":{"version":3,"sources":["/home/ryan/Ruby/RubyWebsite/app/javascript/packs/stripe_backup.js"],"names":["document","addEventListener","createCheckoutSession","priceId","fetch","method","headers","$","attr","body","JSON","stringify","then","result","json","handleResult","error","displayError","getElementById","textContent","message","publishableKey","basicPriceId","basicPrice","proPriceId","proPrice","stripe","Stripe","evt","data","redirectToCheckout","sessionId"],"mappings":"AAAAA,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAW;AACpD;AACA,MAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAASC,OAAT,EAAkB;AAC1C,WAAOC,KAAK,CAAC,0BAAD,EAA6B;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBC,CAAC,CAAC,uBAAD,CAAD,CAA2BC,IAA3B,CAAgC,SAAhC;AAFT,OAF8B;AAMvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,OAAO,EAAEA;AADU,OAAf;AANiC,KAA7B,CAAL,CASJS,IATI,CASC,UAASC,MAAT,EAAiB;AACvB,aAAOA,MAAM,CAACC,IAAP,EAAP;AACD,KAXM,CAAP;AAYD,GAbH,CAFoD,CAiBlD;;;AACA,MAAIC,YAAY,GAAG,SAAfA,YAAe,CAASF,MAAT,EAAiB;AAClC,QAAIA,MAAM,CAACG,KAAX,EAAkB;AAChB,UAAIC,YAAY,GAAGjB,QAAQ,CAACkB,cAAT,CAAwB,eAAxB,CAAnB;AACAD,MAAAA,YAAY,CAACE,WAAb,GAA2BN,MAAM,CAACG,KAAP,CAAaI,OAAxC;AACD;AACF,GALD;AAOA;;;AACAhB,EAAAA,KAAK,CAAC,QAAD,CAAL,CACGQ,IADH,CACQ,UAASC,MAAT,EAAiB;AACrB,WAAOA,MAAM,CAACC,IAAP,EAAP;AACD,GAHH,EAIGF,IAJH,CAIQ,UAASE,IAAT,EAAe;AACnB,QAAIO,cAAc,GAAGP,IAAI,CAACO,cAA1B;AACA,QAAIC,YAAY,GAAGR,IAAI,CAACS,UAAxB;AACA,QAAIC,UAAU,GAAGV,IAAI,CAACW,QAAtB;AAEA,QAAIC,MAAM,GAAGC,MAAM,CAACN,cAAD,CAAnB,CALmB,CAMnB;;AACArB,IAAAA,QAAQ,CACLkB,cADH,CACkB,gBADlB,EAEGjB,gBAFH,CAEoB,OAFpB,EAE6B,UAAS2B,GAAT,EAAc;AACvC1B,MAAAA,qBAAqB,CAACoB,YAAD,CAArB,CAAoCV,IAApC,CAAyC,UAASiB,IAAT,EAAe;AACtD;AACAH,QAAAA,MAAM,CACHI,kBADH,CACsB;AAClBC,UAAAA,SAAS,EAAEF,IAAI,CAACE;AADE,SADtB,EAIGnB,IAJH,CAIQG,YAJR;AAKD,OAPD;AAQD,KAXH;AAYD,GAvBH;AAwBD,CAlDL","sourcesContent":["document.addEventListener(\"turbolinks:load\", function() {\n    // Create a Checkout Session with the selected plan ID\n    var createCheckoutSession = function(priceId) {\n        return fetch(\"/create-checkout-session\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            'X-CSRF-Token': $('meta[name=csrf-token]').attr('content')\n          },\n          body: JSON.stringify({\n            priceId: priceId\n          })\n        }).then(function(result) {\n          return result.json();\n        });\n      };\n      \n      // Handle any errors returned from Checkout\n      var handleResult = function(result) {\n        if (result.error) {\n          var displayError = document.getElementById(\"error-message\");\n          displayError.textContent = result.error.message;\n        }\n      };\n      \n      /* Get your Stripe publishable key to initialize Stripe.js */\n      fetch(\"/setup\")\n        .then(function(result) {\n          return result.json();\n        })\n        .then(function(json) {\n          var publishableKey = json.publishableKey;\n          var basicPriceId = json.basicPrice;\n          var proPriceId = json.proPrice;\n      \n          var stripe = Stripe(publishableKey);\n          // Setup event handler to create a Checkout Session when button is clicked\n          document\n            .getElementById(\"basic-plan-btn\")\n            .addEventListener(\"click\", function(evt) {\n              createCheckoutSession(basicPriceId).then(function(data) {\n                // Call Stripe.js method to redirect to the new Checkout page\n                stripe\n                  .redirectToCheckout({\n                    sessionId: data.sessionId\n                  })\n                  .then(handleResult);\n              });\n            });\n        });\n    });"]},"metadata":{},"sourceType":"module"}